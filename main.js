(()=>{"use strict";class e{constructor(e,t,n,r,o){this.cloudcover=e,this.temperature=t,this.windspeed=n,this.name=r,this.time=o}}const t=()=>{const t=document.querySelector("#search"),n=document.querySelector("#city");t.addEventListener("submit",(async t=>{t.preventDefault();let a=r(),s=await async function(t){const n=`https://api.openweathermap.org/data/2.5/weather?q=${t}&units=metric&appid=e71a677e8f15c5ee6c5d3ecbb730d5a1`,r=await fetch(n,{mode:"cors"}),o=await r.json();return console.log(o),!o.message&&new e(o.weather[0].main,o.main.temp,o.wind.speed,o.name+", "+o.sys.country,(e=>{var t=new Date,n=new Date(t.getTime()+1e3*e.timezone-36e5);return n.getHours()+":"+n.getMinutes()})(o))}(n.value);0!=s?(c(),a[0].textContent="Sky: "+s.cloudcover.toString(),a[1].textContent="Temperature: "+s.temperature.toString(),a[2].textContent="Windspeed: "+s.windspeed.toString()+" kph",a[3].textContent="Name: "+s.name.toString(),a[4].textContent="Time: "+s.time):o()}));const r=()=>{let e=document.querySelector("#temperature");return[document.querySelector("#cloudcover"),e,document.querySelector("#windspeed"),document.querySelector("#name"),document.querySelector("#time")]},o=()=>{document.querySelector("#error").classList=[],r().forEach((e=>{e.textContent=""}))},c=()=>{document.querySelector("#error").className="not-visible"}};window.onload=()=>{t()}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFBTUEsRUFDRkMsWUFBWUMsRUFBWUMsRUFBYUMsRUFBV0MsRUFBTUMsR0FDbERDLEtBQUtMLFdBQWFBLEVBQ2xCSyxLQUFLSixZQUFjQSxFQUNuQkksS0FBS0gsVUFBWUEsRUFDakJHLEtBQUtGLEtBQU9BLEVBQ1pFLEtBQUtELEtBQU9BLEdDUXBCLE1DWk1FLEVBQWMsS0FDaEIsTUFBTUMsRUFBT0MsU0FBU0MsY0FBYyxXQUM5QkMsRUFBV0YsU0FBU0MsY0FBYyxTQUN4Q0YsRUFBS0ksaUJBQWlCLFVBQVVDLE1BQU9DLElBQ25DQSxFQUFFQyxpQkFDRixJQUFJQyxFQUFPQyxJQUNQQyxRRE5aTCxlQUE0QlQsR0FFeEIsTUFBTWUsRUFBVyxxREFBcURmLHdEQUNoRWdCLFFBQWlCQyxNQUFNRixFQUFVLENBQUNHLEtBQU0sU0FDeENDLFFBQWFILEVBQVNJLE9BRTVCLE9BREFDLFFBQVFDLElBQUlILElBQ1RBLEVBQUtJLFNBR0QsSUFBSTVCLEVBQVF3QixFQUFLTCxRQUFRLEdBQUdVLEtBQU1MLEVBQUtLLEtBQUtDLEtBQU1OLEVBQUtPLEtBQUtDLE1BQU9SLEVBQUtuQixLQUFPLEtBQU9tQixFQUFLUyxJQUFJQyxRQUd4RixDQUFDVixJQUNmLElBQUlsQixFQUFPLElBQUk2QixLQUNYQyxFQUFNLElBQUlELEtBQUs3QixFQUFLK0IsVUFBNEIsSUFBaEJiLEVBQUtjLFNBQWtCLE1BQzNELE9BQVlGLEVBQUlHLFdBQWEsSUFBTUgsRUFBSUksY0FOd0VDLENBQVVqQixJQ0hqR2tCLENBQWE5QixFQUFTK0IsT0FDNUIsR0FBWHhCLEdBSUh5QixJQUNBM0IsRUFBSyxHQUFHNEIsWUFBYyxRQUFVMUIsRUFBUWpCLFdBQVc0QyxXQUNuRDdCLEVBQUssR0FBRzRCLFlBQWMsZ0JBQWtCMUIsRUFBUWhCLFlBQVkyQyxXQUM1RDdCLEVBQUssR0FBRzRCLFlBQWMsY0FBZ0IxQixFQUFRZixVQUFVMEMsV0FBYSxPQUNyRTdCLEVBQUssR0FBRzRCLFlBQWMsU0FBVzFCLEVBQVFkLEtBQUt5QyxXQUM5QzdCLEVBQUssR0FBRzRCLFlBQWMsU0FBVzFCLEVBQVFiLE1BUnJDeUMsT0FVUixNQUFNN0IsRUFBVSxLQUNaLElBQUk4QixFQUFjdEMsU0FBU0MsY0FBYyxnQkFLekMsTUFBTyxDQUpZRCxTQUFTQyxjQUFjLGVBSXBCcUMsRUFISnRDLFNBQVNDLGNBQWMsY0FDdkJELFNBQVNDLGNBQWMsU0FDdkJELFNBQVNDLGNBQWMsV0FHdkNvQyxFQUFjLEtBQ0dyQyxTQUFTQyxjQUFjLFVBQzdCc0MsVUFBWSxHQUNkL0IsSUFDTmdDLFNBQVFDLElBQ1RBLEVBQVFOLFlBQWMsT0FHeEJELEVBQVksS0FDS2xDLFNBQVNDLGNBQWMsVUFDN0J5QyxVQUFZLGdCQ3BDakNDLE9BQU9DLE9BQVMsS0FDTTlDLE0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLy4vc3JjL21vZHVsZXMvd2VhdGhlci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLy4vc3JjL21vZHVsZXMvd2VhdGhlcmZldGNoZXIuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci8uL3NyYy9tb2R1bGVzL3ZpZXdIYW5kbGVyLmpzIiwid2VicGFjazovL3dlYXRoZXIvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgV2VhdGhlciB7XG4gICAgY29uc3RydWN0b3IoY2xvdWRjb3ZlciwgdGVtcGVyYXR1cmUsIHdpbmRzcGVlZCwgbmFtZSwgdGltZSl7XG4gICAgICAgIHRoaXMuY2xvdWRjb3ZlciA9IGNsb3VkY292ZXI7XG4gICAgICAgIHRoaXMudGVtcGVyYXR1cmUgPSB0ZW1wZXJhdHVyZTtcbiAgICAgICAgdGhpcy53aW5kc3BlZWQgPSB3aW5kc3BlZWQ7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMudGltZSA9IHRpbWU7XG4gICAgfVxufVxuXG5leHBvcnQge1dlYXRoZXJ9OyIsImltcG9ydCB7V2VhdGhlcn0gZnJvbSAnLi93ZWF0aGVyJztcblxuYXN5bmMgZnVuY3Rpb24gZmV0Y2hXZWF0aGVyKG5hbWUpIHtcbiAgICBsZXQgQVBJX0tFWSA9ICdlNzFhNjc3ZThmMTVjNWVlNmM1ZDNlY2JiNzMwZDVhMSc7XG4gICAgY29uc3QgZW5kcG9pbnQgPSBgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT0ke25hbWV9JnVuaXRzPW1ldHJpYyZhcHBpZD0ke0FQSV9LRVl9YDtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGVuZHBvaW50LCB7bW9kZTogJ2NvcnMnfSk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICBpZihkYXRhLm1lc3NhZ2Upe1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBuZXcgV2VhdGhlcihkYXRhLndlYXRoZXJbMF0ubWFpbiwgZGF0YS5tYWluLnRlbXAsIGRhdGEud2luZC5zcGVlZCwgZGF0YS5uYW1lICsgJywgJyArIGRhdGEuc3lzLmNvdW50cnksIHBhcnNlRGF0ZShkYXRhKSk7XG59O1xuXG5jb25zdCBwYXJzZURhdGUgPSAoZGF0YSkgPT57XG4gICAgdmFyIHRpbWUgPSBuZXcgRGF0ZSgpO1xuICAgIHZhciB0aW0gPSBuZXcgRGF0ZSh0aW1lLmdldFRpbWUoKSArIGRhdGEudGltZXpvbmUgKiAxMDAwIC0gMzYwMDAwMCk7XG4gICAgcmV0dXJuIFwiXCIgKyB0aW0uZ2V0SG91cnMoKSArIFwiOlwiICsgdGltLmdldE1pbnV0ZXMoKTtcbn07XG5cbmNvbnN0IGVycm9yTWVzc2FnZSA9IChpZkVycm9yKSA9PntcbiAgICBpZiAoaWZFcnJvcil7XG4gICAgICAgIGxldCBlcnJvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlcnJvcicpXG4gICAgICAgIGVycm9yLmNsYXNzTGlzdCA9IFtdXG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IGVycm9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Vycm9yJylcbiAgICBlcnJvci5jbGFzc05hbWUgPSBcIm5vdC12aXNpYmxlXCI7XG4gICAgcmV0dXJuO1xufVxuZXhwb3J0IHtmZXRjaFdlYXRoZXJ9OyIsImltcG9ydCB7ZmV0Y2hXZWF0aGVyfSBmcm9tICcuL3dlYXRoZXJmZXRjaGVyJztcblxuY29uc3QgVmlld0hhbmRsZXIgPSAoKCkgPT4ge1xuICAgIGNvbnN0IGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3NlYXJjaFwiKTtcbiAgICBjb25zdCBjaXR5TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjaXR5Jyk7XG4gICAgZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCBhc3luYyAoZSkgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIGxldCBpbmZvID0gZ2V0SW5mbygpO1xuICAgICAgICBsZXQgd2VhdGhlciA9IGF3YWl0IGZldGNoV2VhdGhlcihjaXR5TmFtZS52YWx1ZSk7XG4gICAgICAgIGlmKHdlYXRoZXIgPT0gZmFsc2Upe1xuICAgICAgICAgICAgaGFuZGxlRXJyb3IoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBoaWRlRXJyb3IoKTtcbiAgICAgICAgaW5mb1swXS50ZXh0Q29udGVudCA9ICdTa3k6ICcgKyB3ZWF0aGVyLmNsb3VkY292ZXIudG9TdHJpbmcoKTtcbiAgICAgICAgaW5mb1sxXS50ZXh0Q29udGVudCA9ICdUZW1wZXJhdHVyZTogJyArIHdlYXRoZXIudGVtcGVyYXR1cmUudG9TdHJpbmcoKTtcbiAgICAgICAgaW5mb1syXS50ZXh0Q29udGVudCA9ICdXaW5kc3BlZWQ6ICcgKyB3ZWF0aGVyLndpbmRzcGVlZC50b1N0cmluZygpICsgXCIga3BoXCI7XG4gICAgICAgIGluZm9bM10udGV4dENvbnRlbnQgPSAnTmFtZTogJyArIHdlYXRoZXIubmFtZS50b1N0cmluZygpO1xuICAgICAgICBpbmZvWzRdLnRleHRDb250ZW50ID0gJ1RpbWU6ICcgKyB3ZWF0aGVyLnRpbWU7ICAgICAgXG4gICAgfSk7XG4gICAgY29uc3QgZ2V0SW5mbyA9ICgpID0+IHtcbiAgICAgICAgbGV0IHdlYXRoZXJUZW1wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RlbXBlcmF0dXJlJyk7XG4gICAgICAgIGxldCB3ZWF0aGVyQ2xvdWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2xvdWRjb3ZlcicpO1xuICAgICAgICBsZXQgd2VhdGhlcldpbmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjd2luZHNwZWVkJyk7XG4gICAgICAgIGxldCB3ZWF0aGVyTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuYW1lJyk7XG4gICAgICAgIGxldCBjdXJyZW50VGltZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0aW1lJyk7XG4gICAgICAgIHJldHVybiBbd2VhdGhlckNsb3VkLCB3ZWF0aGVyVGVtcCwgd2VhdGhlcldpbmQsIHdlYXRoZXJOYW1lLCBjdXJyZW50VGltZV07XG4gICAgfTtcbiAgICBjb25zdCBoYW5kbGVFcnJvciA9ICgpID0+IHtcbiAgICAgICAgbGV0IGVycm9yTWVzc2FnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlcnJvcicpO1xuICAgICAgICBlcnJvck1lc3NhZ2UuY2xhc3NMaXN0ID0gW107XG4gICAgICAgIGxldCBpbmZvID0gZ2V0SW5mbygpO1xuICAgICAgICBpbmZvLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgICAgICBlbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBjb25zdCBoaWRlRXJyb3IgPSAoKSA9PiB7XG4gICAgICAgIGxldCBlcnJvck1lc3NhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZXJyb3InKTtcbiAgICAgICAgZXJyb3JNZXNzYWdlLmNsYXNzTmFtZSA9IFwibm90LXZpc2libGVcIjtcbiAgICB9XG59KTtcblxuZXhwb3J0IHtWaWV3SGFuZGxlcn07IiwiaW1wb3J0IHtWaWV3SGFuZGxlcn0gZnJvbSAnLi9tb2R1bGVzL3ZpZXdIYW5kbGVyJztcblxud2luZG93Lm9ubG9hZCA9ICgpPT57XG4gICAgbGV0IHZpZXdIYW5kbGVyID0gVmlld0hhbmRsZXIoKTtcdFxufTsiXSwibmFtZXMiOlsiV2VhdGhlciIsImNvbnN0cnVjdG9yIiwiY2xvdWRjb3ZlciIsInRlbXBlcmF0dXJlIiwid2luZHNwZWVkIiwibmFtZSIsInRpbWUiLCJ0aGlzIiwiVmlld0hhbmRsZXIiLCJmb3JtIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY2l0eU5hbWUiLCJhZGRFdmVudExpc3RlbmVyIiwiYXN5bmMiLCJlIiwicHJldmVudERlZmF1bHQiLCJpbmZvIiwiZ2V0SW5mbyIsIndlYXRoZXIiLCJlbmRwb2ludCIsInJlc3BvbnNlIiwiZmV0Y2giLCJtb2RlIiwiZGF0YSIsImpzb24iLCJjb25zb2xlIiwibG9nIiwibWVzc2FnZSIsIm1haW4iLCJ0ZW1wIiwid2luZCIsInNwZWVkIiwic3lzIiwiY291bnRyeSIsIkRhdGUiLCJ0aW0iLCJnZXRUaW1lIiwidGltZXpvbmUiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJwYXJzZURhdGUiLCJmZXRjaFdlYXRoZXIiLCJ2YWx1ZSIsImhpZGVFcnJvciIsInRleHRDb250ZW50IiwidG9TdHJpbmciLCJoYW5kbGVFcnJvciIsIndlYXRoZXJUZW1wIiwiY2xhc3NMaXN0IiwiZm9yRWFjaCIsImVsZW1lbnQiLCJjbGFzc05hbWUiLCJ3aW5kb3ciLCJvbmxvYWQiXSwic291cmNlUm9vdCI6IiJ9