(()=>{"use strict";class e{constructor(e,t,n,o,r){this.cloudcover=e,this.temperature=t,this.windspeed=n,this.name=o,this.time=r}}const t=()=>{document.querySelector("#search");const t=document.querySelector("#city"),n=document.querySelector("#wait");t.addEventListener("input",(async s=>{s.preventDefault(),n.classList=[];let a=o(),i=await async function(t){const n=`https://api.openweathermap.org/data/2.5/weather?q=${t}&units=metric&appid=e71a677e8f15c5ee6c5d3ecbb730d5a1`,o=await fetch(n,{mode:"cors"}),r=await o.json();return console.log(r),!r.message&&new e(r.weather[0].main,r.main.temp,r.wind.speed,r.name+", "+r.sys.country,(e=>{var t=new Date,n=new Date(t.getTime()+1e3*e.timezone-36e5);return n.getHours()+":"+n.getMinutes()})(r))}(t.value);if(0==i)return n.className="not-visible",void r();c(),n.className="not-visible",a[0].textContent="Sky: "+i.cloudcover.toString(),a[1].textContent="Temperature: "+i.temperature.toString(),a[2].textContent="Windspeed: "+i.windspeed.toString()+" kph",a[3].textContent="Name: "+i.name.toString(),a[4].textContent="Time: "+i.time}));const o=()=>{const e=document.querySelector("#temperature");return[document.querySelector("#cloudcover"),e,document.querySelector("#windspeed"),document.querySelector("#name"),document.querySelector("#time")]},r=()=>{document.querySelector("#error").classList=[],o().forEach((e=>{e.textContent=""}))},c=()=>{document.querySelector("#error").className="not-visible"}};window.onload=()=>{t()}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFBTUEsRUFDRkMsWUFBWUMsRUFBWUMsRUFBYUMsRUFBV0MsRUFBTUMsR0FDbERDLEtBQUtMLFdBQWFBLEVBQ2xCSyxLQUFLSixZQUFjQSxFQUNuQkksS0FBS0gsVUFBWUEsRUFDakJHLEtBQUtGLEtBQU9BLEVBQ1pFLEtBQUtELEtBQU9BLEdDUXBCLE1DWk1FLEVBQWMsS0FDSEMsU0FBU0MsY0FBYyxXQUFwQyxNQUNNQyxFQUFXRixTQUFTQyxjQUFjLFNBQ2xDRSxFQUFPSCxTQUFTQyxjQUFjLFNBQ3BDQyxFQUFTRSxpQkFBaUIsU0FBU0MsTUFBT0MsSUFDdENBLEVBQUVDLGlCQUNGSixFQUFLSyxVQUFZLEdBQ2pCLElBQUlDLEVBQU9DLElBQ1BDLFFEUlpOLGVBQTRCVCxHQUV4QixNQUFNZ0IsRUFBVyxxREFBcURoQix3REFDaEVpQixRQUFpQkMsTUFBTUYsRUFBVSxDQUFDRyxLQUFNLFNBQ3hDQyxRQUFhSCxFQUFTSSxPQUU1QixPQURBQyxRQUFRQyxJQUFJSCxJQUNUQSxFQUFLSSxTQUdELElBQUk3QixFQUFReUIsRUFBS0wsUUFBUSxHQUFHVSxLQUFNTCxFQUFLSyxLQUFLQyxLQUFNTixFQUFLTyxLQUFLQyxNQUFPUixFQUFLcEIsS0FBTyxLQUFPb0IsRUFBS1MsSUFBSUMsUUFHeEYsQ0FBQ1YsSUFDZixJQUFJbkIsRUFBTyxJQUFJOEIsS0FDWEMsRUFBTSxJQUFJRCxLQUFLOUIsRUFBS2dDLFVBQTRCLElBQWhCYixFQUFLYyxTQUFrQixNQUMzRCxPQUFZRixFQUFJRyxXQUFhLElBQU1ILEVBQUlJLGNBTndFQyxDQUFVakIsSUNEakdrQixDQUFhaEMsRUFBU2lDLE9BQzFDLEdBQWMsR0FBWHhCLEVBR0MsT0FGQVIsRUFBS2lDLFVBQVksbUJBQ2pCQyxJQUdKQyxJQUNBbkMsRUFBS2lDLFVBQVksY0FDakIzQixFQUFLLEdBQUc4QixZQUFjLFFBQVU1QixFQUFRbEIsV0FBVytDLFdBQ25EL0IsRUFBSyxHQUFHOEIsWUFBYyxnQkFBa0I1QixFQUFRakIsWUFBWThDLFdBQzVEL0IsRUFBSyxHQUFHOEIsWUFBYyxjQUFnQjVCLEVBQVFoQixVQUFVNkMsV0FBYSxPQUNyRS9CLEVBQUssR0FBRzhCLFlBQWMsU0FBVzVCLEVBQVFmLEtBQUs0QyxXQUM5Qy9CLEVBQUssR0FBRzhCLFlBQWMsU0FBVzVCLEVBQVFkLFFBRTdDLE1BQU1hLEVBQVUsS0FDWixNQUFNK0IsRUFBY3pDLFNBQVNDLGNBQWMsZ0JBSzNDLE1BQU8sQ0FKY0QsU0FBU0MsY0FBYyxlQUl0QndDLEVBSEZ6QyxTQUFTQyxjQUFjLGNBQ3ZCRCxTQUFTQyxjQUFjLFNBQ3ZCRCxTQUFTQyxjQUFjLFdBR3pDb0MsRUFBYyxLQUNLckMsU0FBU0MsY0FBYyxVQUMvQk8sVUFBWSxHQUNkRSxJQUNOZ0MsU0FBUUMsSUFDVEEsRUFBUUosWUFBYyxPQUd4QkQsRUFBWSxLQUNLdEMsU0FBU0MsY0FBYyxVQUM3Qm1DLFVBQVksZ0JDeENqQ1EsT0FBT0MsT0FBUyxLQUNNOUMsTSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYXRoZXIvLi9zcmMvbW9kdWxlcy93ZWF0aGVyLmpzIiwid2VicGFjazovL3dlYXRoZXIvLi9zcmMvbW9kdWxlcy93ZWF0aGVyZmV0Y2hlci5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyLy4vc3JjL21vZHVsZXMvdmlld0hhbmRsZXIuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBXZWF0aGVyIHtcbiAgICBjb25zdHJ1Y3RvcihjbG91ZGNvdmVyLCB0ZW1wZXJhdHVyZSwgd2luZHNwZWVkLCBuYW1lLCB0aW1lKXtcbiAgICAgICAgdGhpcy5jbG91ZGNvdmVyID0gY2xvdWRjb3ZlcjtcbiAgICAgICAgdGhpcy50ZW1wZXJhdHVyZSA9IHRlbXBlcmF0dXJlO1xuICAgICAgICB0aGlzLndpbmRzcGVlZCA9IHdpbmRzcGVlZDtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy50aW1lID0gdGltZTtcbiAgICB9XG59XG5cbmV4cG9ydCB7V2VhdGhlcn07IiwiaW1wb3J0IHtXZWF0aGVyfSBmcm9tICcuL3dlYXRoZXInO1xuXG5hc3luYyBmdW5jdGlvbiBmZXRjaFdlYXRoZXIobmFtZSkge1xuICAgIGxldCBBUElfS0VZID0gJ2U3MWE2NzdlOGYxNWM1ZWU2YzVkM2VjYmI3MzBkNWExJztcbiAgICBjb25zdCBlbmRwb2ludCA9IGBodHRwczovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvd2VhdGhlcj9xPSR7bmFtZX0mdW5pdHM9bWV0cmljJmFwcGlkPSR7QVBJX0tFWX1gO1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goZW5kcG9pbnQsIHttb2RlOiAnY29ycyd9KTtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgIGlmKGRhdGEubWVzc2FnZSl7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBXZWF0aGVyKGRhdGEud2VhdGhlclswXS5tYWluLCBkYXRhLm1haW4udGVtcCwgZGF0YS53aW5kLnNwZWVkLCBkYXRhLm5hbWUgKyAnLCAnICsgZGF0YS5zeXMuY291bnRyeSwgcGFyc2VEYXRlKGRhdGEpKTtcbn07XG5cbmNvbnN0IHBhcnNlRGF0ZSA9IChkYXRhKSA9PntcbiAgICB2YXIgdGltZSA9IG5ldyBEYXRlKCk7XG4gICAgdmFyIHRpbSA9IG5ldyBEYXRlKHRpbWUuZ2V0VGltZSgpICsgZGF0YS50aW1lem9uZSAqIDEwMDAgLSAzNjAwMDAwKTtcbiAgICByZXR1cm4gXCJcIiArIHRpbS5nZXRIb3VycygpICsgXCI6XCIgKyB0aW0uZ2V0TWludXRlcygpO1xufTtcblxuY29uc3QgZXJyb3JNZXNzYWdlID0gKGlmRXJyb3IpID0+e1xuICAgIGlmIChpZkVycm9yKXtcbiAgICAgICAgbGV0IGVycm9yID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Vycm9yJylcbiAgICAgICAgZXJyb3IuY2xhc3NMaXN0ID0gW11cbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBsZXQgZXJyb3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZXJyb3InKVxuICAgIGVycm9yLmNsYXNzTmFtZSA9IFwibm90LXZpc2libGVcIjtcbiAgICByZXR1cm47XG59XG5leHBvcnQge2ZldGNoV2VhdGhlcn07IiwiaW1wb3J0IHtmZXRjaFdlYXRoZXJ9IGZyb20gJy4vd2VhdGhlcmZldGNoZXInO1xuXG5jb25zdCBWaWV3SGFuZGxlciA9ICgoKSA9PiB7XG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2VhcmNoXCIpO1xuICAgIGNvbnN0IGNpdHlOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NpdHknKTtcbiAgICBjb25zdCB3YWl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3dhaXQnKTtcbiAgICBjaXR5TmFtZS5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIGFzeW5jIChlKSA9PiB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgd2FpdC5jbGFzc0xpc3QgPSBbXTtcbiAgICAgICAgbGV0IGluZm8gPSBnZXRJbmZvKCk7XG4gICAgICAgIGxldCB3ZWF0aGVyID0gYXdhaXQgZmV0Y2hXZWF0aGVyKGNpdHlOYW1lLnZhbHVlKTtcbiAgICAgICAgaWYod2VhdGhlciA9PSBmYWxzZSl7XG4gICAgICAgICAgICB3YWl0LmNsYXNzTmFtZSA9IFwibm90LXZpc2libGVcIjtcbiAgICAgICAgICAgIGhhbmRsZUVycm9yKCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaGlkZUVycm9yKCk7XG4gICAgICAgIHdhaXQuY2xhc3NOYW1lID0gXCJub3QtdmlzaWJsZVwiO1xuICAgICAgICBpbmZvWzBdLnRleHRDb250ZW50ID0gJ1NreTogJyArIHdlYXRoZXIuY2xvdWRjb3Zlci50b1N0cmluZygpO1xuICAgICAgICBpbmZvWzFdLnRleHRDb250ZW50ID0gJ1RlbXBlcmF0dXJlOiAnICsgd2VhdGhlci50ZW1wZXJhdHVyZS50b1N0cmluZygpO1xuICAgICAgICBpbmZvWzJdLnRleHRDb250ZW50ID0gJ1dpbmRzcGVlZDogJyArIHdlYXRoZXIud2luZHNwZWVkLnRvU3RyaW5nKCkgKyBcIiBrcGhcIjtcbiAgICAgICAgaW5mb1szXS50ZXh0Q29udGVudCA9ICdOYW1lOiAnICsgd2VhdGhlci5uYW1lLnRvU3RyaW5nKCk7XG4gICAgICAgIGluZm9bNF0udGV4dENvbnRlbnQgPSAnVGltZTogJyArIHdlYXRoZXIudGltZTsgICAgICBcbiAgICB9KTtcbiAgICBjb25zdCBnZXRJbmZvID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB3ZWF0aGVyVGVtcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0ZW1wZXJhdHVyZScpO1xuICAgICAgICBjb25zdCB3ZWF0aGVyQ2xvdWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2xvdWRjb3ZlcicpO1xuICAgICAgICBjb25zdCB3ZWF0aGVyV2luZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN3aW5kc3BlZWQnKTtcbiAgICAgICAgY29uc3Qgd2VhdGhlck5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbmFtZScpO1xuICAgICAgICBjb25zdCBjdXJyZW50VGltZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0aW1lJyk7XG4gICAgICAgIHJldHVybiBbd2VhdGhlckNsb3VkLCB3ZWF0aGVyVGVtcCwgd2VhdGhlcldpbmQsIHdlYXRoZXJOYW1lLCBjdXJyZW50VGltZV07XG4gICAgfTtcbiAgICBjb25zdCBoYW5kbGVFcnJvciA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgZXJyb3JNZXNzYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Vycm9yJyk7XG4gICAgICAgIGVycm9yTWVzc2FnZS5jbGFzc0xpc3QgPSBbXTtcbiAgICAgICAgbGV0IGluZm8gPSBnZXRJbmZvKCk7XG4gICAgICAgIGluZm8uZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgIGVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIGNvbnN0IGhpZGVFcnJvciA9ICgpID0+IHtcbiAgICAgICAgbGV0IGVycm9yTWVzc2FnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlcnJvcicpO1xuICAgICAgICBlcnJvck1lc3NhZ2UuY2xhc3NOYW1lID0gXCJub3QtdmlzaWJsZVwiO1xuICAgIH1cbn0pO1xuXG5leHBvcnQge1ZpZXdIYW5kbGVyfTsiLCJpbXBvcnQge1ZpZXdIYW5kbGVyfSBmcm9tICcuL21vZHVsZXMvdmlld0hhbmRsZXInO1xuXG53aW5kb3cub25sb2FkID0gKCk9PntcbiAgICBsZXQgdmlld0hhbmRsZXIgPSBWaWV3SGFuZGxlcigpO1x0XG59OyJdLCJuYW1lcyI6WyJXZWF0aGVyIiwiY29uc3RydWN0b3IiLCJjbG91ZGNvdmVyIiwidGVtcGVyYXR1cmUiLCJ3aW5kc3BlZWQiLCJuYW1lIiwidGltZSIsInRoaXMiLCJWaWV3SGFuZGxlciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNpdHlOYW1lIiwid2FpdCIsImFkZEV2ZW50TGlzdGVuZXIiLCJhc3luYyIsImUiLCJwcmV2ZW50RGVmYXVsdCIsImNsYXNzTGlzdCIsImluZm8iLCJnZXRJbmZvIiwid2VhdGhlciIsImVuZHBvaW50IiwicmVzcG9uc2UiLCJmZXRjaCIsIm1vZGUiLCJkYXRhIiwianNvbiIsImNvbnNvbGUiLCJsb2ciLCJtZXNzYWdlIiwibWFpbiIsInRlbXAiLCJ3aW5kIiwic3BlZWQiLCJzeXMiLCJjb3VudHJ5IiwiRGF0ZSIsInRpbSIsImdldFRpbWUiLCJ0aW1lem9uZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsInBhcnNlRGF0ZSIsImZldGNoV2VhdGhlciIsInZhbHVlIiwiY2xhc3NOYW1lIiwiaGFuZGxlRXJyb3IiLCJoaWRlRXJyb3IiLCJ0ZXh0Q29udGVudCIsInRvU3RyaW5nIiwid2VhdGhlclRlbXAiLCJmb3JFYWNoIiwiZWxlbWVudCIsIndpbmRvdyIsIm9ubG9hZCJdLCJzb3VyY2VSb290IjoiIn0=